.tittlesApp {
  font-family: 'test' !important;
  font-size: 30px !important;
  color: #666666 !important;
}

.subTittlesApp{
  font-family: 'test' !important;
  font-size: 30px !important;
  color: #0099cc !important;
}

.subTittlesAppTwo{
  font-family: 'test' !important;
  font-size: 16px !important;
  color: #666666!important;
}

/*
! tailwindcss v3.4.1 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

#__next :is(.pointer-events-none) {
  pointer-events: none;
}

#__next :is(.visible) {
  visibility: visible;
}

#__next :is(.static) {
  position: static;
}

#__next :is(.fixed) {
  position: fixed;
}

#__next :is(.absolute) {
  position: absolute;
}

#__next :is(.relative) {
  position: relative;
}

#__next :is(.bottom-0) {
  bottom: 0px;
}

#__next :is(.left-0) {
  left: 0px;
}

#__next :is(.top-0) {
  top: 0px;
}

#__next :is(.z-10) {
  z-index: 10;
}

#__next :is(.z-50) {
  z-index: 50;
}

#__next :is(.z-\[-1\]) {
  z-index: -1;
}

#__next :is(.m-0) {
  margin: 0px;
}

#__next :is(.m-2) {
  margin: 0.5rem;
}

#__next :is(.mx-8) {
  margin-left: 2rem;
  margin-right: 2rem;
}

#__next :is(.-mt-1) {
  margin-top: -0.25rem;
}

#__next :is(.-mt-8) {
  margin-top: -2rem;
}

#__next :is(.mb-2) {
  margin-bottom: 0.5rem;
}

#__next :is(.mb-3) {
  margin-bottom: 0.75rem;
}

#__next :is(.mb-32) {
  margin-bottom: 8rem;
}

#__next :is(.mb-4) {
  margin-bottom: 1rem;
}

#__next :is(.mb-8) {
  margin-bottom: 2rem;
}

#__next :is(.ml-16) {
  margin-left: 4rem;
}

#__next :is(.ml-4) {
  margin-left: 1rem;
}

#__next :is(.ml-8) {
  margin-left: 2rem;
}

#__next :is(.mr-2) {
  margin-right: 0.5rem;
}

#__next :is(.mr-36) {
  margin-right: 9rem;
}

#__next :is(.mr-40) {
  margin-right: 10rem;
}

#__next :is(.mt-2) {
  margin-top: 0.5rem;
}

#__next :is(.mt-4) {
  margin-top: 1rem;
}

#__next :is(.block) {
  display: block;
}

#__next :is(.inline-block) {
  display: inline-block;
}

#__next :is(.flex) {
  display: flex;
}

#__next :is(.grid) {
  display: grid;
}

#__next :is(.hidden) {
  display: none;
}

#__next :is(.h-12) {
  height: 3rem;
}

#__next :is(.h-14) {
  height: 3.5rem;
}

#__next :is(.h-48) {
  height: 12rem;
}

#__next :is(.h-full) {
  height: 100%;
}

#__next :is(.h-screen) {
  height: 100vh;
}

#__next :is(.max-h-full) {
  max-height: 100%;
}

#__next :is(.min-h-screen) {
  min-height: 100vh;
}

#__next :is(.w-full) {
  width: 100%;
}

#__next :is(.max-w-5xl) {
  max-width: 64rem;
}

#__next :is(.max-w-\[30ch\]) {
  max-width: 30ch;
}

#__next :is(.flex-none) {
  flex: none;
}

#__next :is(.flex-grow) {
  flex-grow: 1;
}

#__next :is(.transform) {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#__next :is(.flex-col) {
  flex-direction: column;
}

#__next :is(.place-content-start) {
  place-content: start;
}

#__next :is(.place-content-between) {
  place-content: space-between;
}

#__next :is(.place-items-center) {
  place-items: center;
}

#__next :is(.items-end) {
  align-items: flex-end;
}

#__next :is(.items-center) {
  align-items: center;
}

#__next :is(.justify-center) {
  justify-content: center;
}

#__next :is(.justify-between) {
  justify-content: space-between;
}

#__next :is(.gap-2) {
  gap: 0.5rem;
}

#__next :is(.rounded-full) {
  border-radius: 9999px;
}

#__next :is(.rounded-lg) {
  border-radius: 0.5rem;
}

#__next :is(.border) {
  border-width: 1px;
}

#__next :is(.border-b) {
  border-bottom-width: 1px;
}

#__next :is(.border-t-2) {
  border-top-width: 2px;
}

#__next :is(.border-none) {
  border-style: none;
}

#__next :is(.border-gray-300) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

#__next :is(.border-gray-500) {
  --tw-border-opacity: 1;
  border-color: rgb(107 114 128 / var(--tw-border-opacity));
}

#__next :is(.border-transparent) {
  border-color: transparent;
}

#__next :is(.border-white) {
  --tw-border-opacity: 1;
  border-color: rgb(255 255 255 / var(--tw-border-opacity));
}

#__next :is(.bg-indigo-950) {
  --tw-bg-opacity: 1;
  background-color: rgb(30 27 75 / var(--tw-bg-opacity));
}

#__next :is(.bg-sky-600) {
  --tw-bg-opacity: 1;
  background-color: rgb(2 132 199 / var(--tw-bg-opacity));
}

#__next :is(.bg-slate-100) {
  --tw-bg-opacity: 1;
  background-color: rgb(241 245 249 / var(--tw-bg-opacity));
}

#__next :is(.bg-violet-950) {
  --tw-bg-opacity: 1;
  background-color: rgb(46 16 101 / var(--tw-bg-opacity));
}

#__next :is(.bg-white) {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}

#__next :is(.bg-gradient-to-b) {
  background-image: linear-gradient(to bottom, var(--tw-gradient-stops));
}

#__next :is(.bg-gradient-to-t) {
  background-image: linear-gradient(to top, var(--tw-gradient-stops));
}

#__next :is(.from-white) {
  --tw-gradient-from: #fff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#__next :is(.from-zinc-200) {
  --tw-gradient-from: #e4e4e7 var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(228 228 231 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#__next :is(.via-white) {
  --tw-gradient-to: rgb(255 255 255 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #fff var(--tw-gradient-via-position), var(--tw-gradient-to);
}

#__next :is(.p-0) {
  padding: 0px;
}

#__next :is(.p-2) {
  padding: 0.5rem;
}

#__next :is(.p-24) {
  padding: 6rem;
}

#__next :is(.p-8) {
  padding: 2rem;
}

#__next :is(.px-5) {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

#__next :is(.py-4) {
  padding-top: 1rem;
  padding-bottom: 1rem;
}

#__next :is(.pb-2) {
  padding-bottom: 0.5rem;
}

#__next :is(.pb-6) {
  padding-bottom: 1.5rem;
}

#__next :is(.pb-8) {
  padding-bottom: 2rem;
}

#__next :is(.pl-5) {
  padding-left: 1.25rem;
}

#__next :is(.pl-8) {
  padding-left: 2rem;
}

#__next :is(.pr-5) {
  padding-right: 1.25rem;
}

#__next :is(.pr-8) {
  padding-right: 2rem;
}

#__next :is(.pt-0) {
  padding-top: 0px;
}

#__next :is(.pt-2) {
  padding-top: 0.5rem;
}

#__next :is(.pt-3) {
  padding-top: 0.75rem;
}

#__next :is(.pt-4) {
  padding-top: 1rem;
}

#__next :is(.pt-5) {
  padding-top: 1.25rem;
}

#__next :is(.pt-6) {
  padding-top: 1.5rem;
}

#__next :is(.pt-8) {
  padding-top: 2rem;
}

#__next :is(.text-center) {
  text-align: center;
}

#__next :is(.font-mono) {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

#__next :is(.text-2xl) {
  font-size: 1.5rem;
  line-height: 2rem;
}

#__next :is(.text-base) {
  font-size: 1rem;
  line-height: 1.5rem;
}

#__next :is(.text-sm) {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

#__next :is(.text-xl) {
  font-size: 1.25rem;
  line-height: 1.75rem;
}

#__next :is(.text-xs) {
  font-size: 0.75rem;
  line-height: 1rem;
}

#__next :is(.font-bold) {
  font-weight: 700;
}

#__next :is(.font-semibold) {
  font-weight: 600;
}

#__next :is(.normal-case) {
  text-transform: none;
}

#__next :is(.text-sky-400) {
  --tw-text-opacity: 1;
  color: rgb(56 189 248 / var(--tw-text-opacity));
}

#__next :is(.text-violet-950) {
  --tw-text-opacity: 1;
  color: rgb(46 16 101 / var(--tw-text-opacity));
}

#__next :is(.text-white) {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}

#__next :is(.opacity-50) {
  opacity: 0.5;
}

#__next :is(.filter) {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#__next :is(.backdrop-blur-2xl) {
  --tw-backdrop-blur: blur(40px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
          backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

#__next :is(.transition) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#__next :is(.transition-colors) {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

#__next :is(.transition-transform) {
  transition-property: transform;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

@font-face {
  font-family: 'test';

  src: url('./assets/dunkin/dunkinSansBold.otf') format('opentype');

  font-weight: normal;

  font-style: normal;
}

html {
  height: 100%;
}

#__next :is(.before\:absolute)::before {
  content: var(--tw-content);
  position: absolute;
}

#__next :is(.before\:h-\[300px\])::before {
  content: var(--tw-content);
  height: 300px;
}

#__next :is(.before\:w-\[480px\])::before {
  content: var(--tw-content);
  width: 480px;
}

#__next :is(.before\:-translate-x-1\/2)::before {
  content: var(--tw-content);
  --tw-translate-x: -50%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#__next :is(.before\:rounded-full)::before {
  content: var(--tw-content);
  border-radius: 9999px;
}

#__next :is(.before\:bg-gradient-radial)::before {
  content: var(--tw-content);
  background-image: radial-gradient(var(--tw-gradient-stops));
}

#__next :is(.before\:from-white)::before {
  content: var(--tw-content);
  --tw-gradient-from: #fff var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#__next :is(.before\:to-transparent)::before {
  content: var(--tw-content);
  --tw-gradient-to: transparent var(--tw-gradient-to-position);
}

#__next :is(.before\:blur-2xl)::before {
  content: var(--tw-content);
  --tw-blur: blur(40px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#__next :is(.before\:content-\[\'\'\])::before {
  --tw-content: '';
  content: var(--tw-content);
}

#__next :is(.after\:absolute)::after {
  content: var(--tw-content);
  position: absolute;
}

#__next :is(.after\:-z-20)::after {
  content: var(--tw-content);
  z-index: -20;
}

#__next :is(.after\:h-\[180px\])::after {
  content: var(--tw-content);
  height: 180px;
}

#__next :is(.after\:w-\[240px\])::after {
  content: var(--tw-content);
  width: 240px;
}

#__next :is(.after\:translate-x-1\/3)::after {
  content: var(--tw-content);
  --tw-translate-x: 33.333333%;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

#__next :is(.after\:bg-gradient-conic)::after {
  content: var(--tw-content);
  background-image: conic-gradient(from 180deg at 50% 50%, var(--tw-gradient-stops));
}

#__next :is(.after\:from-sky-200)::after {
  content: var(--tw-content);
  --tw-gradient-from: #bae6fd var(--tw-gradient-from-position);
  --tw-gradient-to: rgb(186 230 253 / 0) var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
}

#__next :is(.after\:via-blue-200)::after {
  content: var(--tw-content);
  --tw-gradient-to: rgb(191 219 254 / 0)  var(--tw-gradient-to-position);
  --tw-gradient-stops: var(--tw-gradient-from), #bfdbfe var(--tw-gradient-via-position), var(--tw-gradient-to);
}

#__next :is(.after\:blur-2xl)::after {
  content: var(--tw-content);
  --tw-blur: blur(40px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

#__next :is(.after\:content-\[\'\'\])::after {
  --tw-content: '';
  content: var(--tw-content);
}

#__next :is(.hover\:border-gray-300:hover) {
  --tw-border-opacity: 1;
  border-color: rgb(209 213 219 / var(--tw-border-opacity));
}

#__next :is(.hover\:bg-gray-100:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(243 244 246 / var(--tw-bg-opacity));
}

#__next :is(.hover\:bg-sky-400:hover) {
  --tw-bg-opacity: 1;
  background-color: rgb(56 189 248 / var(--tw-bg-opacity));
}

#__next :is(.group:hover .group-hover\:translate-x-1) {
  --tw-translate-x: 0.25rem;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

@media (prefers-reduced-motion: reduce) {
  #__next :is(.motion-reduce\:transform-none) {
    transform: none;
  }
}

@media (min-width: 768px) {
  #__next :is(.md\:h-32) {
    height: 8rem;
  }

  #__next :is(.md\:w-52) {
    width: 13rem;
  }

  #__next :is(.md\:flex-row) {
    flex-direction: row;
  }

  #__next :is(.md\:overflow-hidden) {
    overflow: hidden;
  }

  #__next :is(.md\:overflow-y-auto) {
    overflow-y: auto;
  }
}

@media (min-width: 1024px) {
  #__next :is(.lg\:pointer-events-auto) {
    pointer-events: auto;
  }

  #__next :is(.lg\:static) {
    position: static;
  }

  #__next :is(.lg\:mb-0) {
    margin-bottom: 0px;
  }

  #__next :is(.lg\:flex) {
    display: flex;
  }

  #__next :is(.lg\:h-auto) {
    height: auto;
  }

  #__next :is(.lg\:w-auto) {
    width: auto;
  }

  #__next :is(.lg\:w-full) {
    width: 100%;
  }

  #__next :is(.lg\:max-w-5xl) {
    max-width: 64rem;
  }

  #__next :is(.lg\:grid-cols-4) {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  #__next :is(.lg\:rounded-xl) {
    border-radius: 0.75rem;
  }

  #__next :is(.lg\:border) {
    border-width: 1px;
  }

  #__next :is(.lg\:bg-gray-200) {
    --tw-bg-opacity: 1;
    background-color: rgb(229 231 235 / var(--tw-bg-opacity));
  }

  #__next :is(.lg\:bg-none) {
    background-image: none;
  }

  #__next :is(.lg\:p-0) {
    padding: 0px;
  }

  #__next :is(.lg\:p-4) {
    padding: 1rem;
  }

  #__next :is(.lg\:text-left) {
    text-align: left;
  }

  #__next :is(.before\:lg\:h-\[360px\])::before {
    content: var(--tw-content);
    height: 360px;
  }
}

@media (prefers-color-scheme: dark) {
  #__next :is(.dark\:border-neutral-800) {
    --tw-border-opacity: 1;
    border-color: rgb(38 38 38 / var(--tw-border-opacity));
  }

  #__next :is(.dark\:bg-zinc-800\/30) {
    background-color: rgb(39 39 42 / 0.3);
  }

  #__next :is(.dark\:from-black) {
    --tw-gradient-from: #000 var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  #__next :is(.dark\:from-inherit) {
    --tw-gradient-from: inherit var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(255 255 255 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  #__next :is(.dark\:via-black) {
    --tw-gradient-to: rgb(0 0 0 / 0)  var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), #000 var(--tw-gradient-via-position), var(--tw-gradient-to);
  }

  #__next :is(.dark\:drop-shadow-\[0_0_0\.3rem_\#ffffff70\]) {
    --tw-drop-shadow: drop-shadow(0 0 0.3rem #ffffff70);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  #__next :is(.dark\:invert) {
    --tw-invert: invert(100%);
    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
  }

  #__next :is(.before\:dark\:bg-gradient-to-br)::before {
    content: var(--tw-content);
    background-image: linear-gradient(to bottom right, var(--tw-gradient-stops));
  }

  #__next :is(.before\:dark\:from-transparent)::before {
    content: var(--tw-content);
    --tw-gradient-from: transparent var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(0 0 0 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  #__next :is(.before\:dark\:to-blue-700)::before {
    content: var(--tw-content);
    --tw-gradient-to: #1d4ed8 var(--tw-gradient-to-position);
  }

  #__next :is(.before\:dark\:opacity-10)::before {
    content: var(--tw-content);
    opacity: 0.1;
  }

  #__next :is(.after\:dark\:from-sky-900)::after {
    content: var(--tw-content);
    --tw-gradient-from: #0c4a6e var(--tw-gradient-from-position);
    --tw-gradient-to: rgb(12 74 110 / 0) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to);
  }

  #__next :is(.after\:dark\:via-\[\#0141ff\])::after {
    content: var(--tw-content);
    --tw-gradient-to: rgb(1 65 255 / 0)  var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-from), #0141ff var(--tw-gradient-via-position), var(--tw-gradient-to);
  }

  #__next :is(.after\:dark\:opacity-40)::after {
    content: var(--tw-content);
    opacity: 0.4;
  }

  #__next :is(.hover\:dark\:border-neutral-700:hover) {
    --tw-border-opacity: 1;
    border-color: rgb(64 64 64 / var(--tw-border-opacity));
  }

  #__next :is(.hover\:dark\:bg-neutral-800:hover) {
    --tw-bg-opacity: 1;
    background-color: rgb(38 38 38 / var(--tw-bg-opacity));
  }

  #__next :is(.hover\:dark\:bg-neutral-800\/30:hover) {
    background-color: rgb(38 38 38 / 0.3);
  }

  #__next :is(.hover\:dark\:bg-opacity-30:hover) {
    --tw-bg-opacity: 0.3;
  }
}

@media (min-width: 1024px) {
  @media (prefers-color-scheme: dark) {
    #__next :is(.lg\:dark\:bg-zinc-800\/30) {
      background-color: rgb(39 39 42 / 0.3);
    }
  }
}